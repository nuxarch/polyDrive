#include <Arduino.h>
#include <SimpleFOC.h>
#include <DRV8301.h>

BLDCMotor motor = BLDCMotor(24,0.8);
BLDCDriver3PWM driver = BLDCDriver3PWM(33, 25, 26);
DRV8301 gate_driver = DRV8301(23, 19, 18, 5, 27, 14);
float target_velocity = 0;
Commander command = Commander(Serial);
void doTarget(char *cmd) { command.scalar(&target_velocity, cmd); }

// SENSOR
// HallSensor sensor = HallSensor(2, 4, 15, 24);
HallSensor sensor = HallSensor(32, 35, 34, 24);
void doA() { sensor.handleA(); }
void doB() { sensor.handleB(); }
void doC() { sensor.handleC(); }

void setup()
{
    // SENSOR SETUP
    _delay(1000);
    Serial.begin(115200);
    sensor.pullup = Pullup::USE_EXTERN;
    sensor.init();
    sensor.enableInterrupts(doA, doB, doC);
    Serial.println("Sensor ready");
    _delay(1000);

    driver.voltage_power_supply = 25;
    driver.init();
    gate_driver.begin(PWM_INPUT_MODE_3PWM);
    motor.linkDriver(&driver);
    motor.linkSensor(&sensor);
    
    
    motor.useMonitoring(Serial);
    // motor.controller = MotionControlType::angle_openloop;
    // motor.controller = MotionControlType::velocity_openloop;

    motor.voltage_sensor_align = 8;
    motor.velocity_index_search = 8;
    motor.phase_resistance = 0.5;
    // limiting motor movements
    motor.voltage_limit = 24;   // [V]
    motor.velocity_limit = 100; // [rad/s]
    motor.current_limit = 4;


    motor.controller = MotionControlType::velocity;
    motor.PID_velocity.P = 3;
    motor.PID_velocity.I = 0.1;
    motor.PID_velocity.D = 0.0;

    motor.PID_velocity.output_ramp = 1000;

    // velocity low pass filtering time constant
    motor.LPF_velocity.Tf = 0.01;

    motor.init();
    motor.initFOC();
    command.add('T', doTarget, "target velocity");
    Serial.println(F("Motor ready."));
    Serial.println(F("Set the target velocity using serial terminal:"));
    _delay(1000);
}
void loop()
{
    // sensor.update();
    motor.monitor();
    motor.loopFOC();

    // Serial.println(sensor.getAngle());
    // Serial.print("\t");
    // Serial.println(sensor.getVelocity());
    motor.move(target_velocity);
    command.run();
}